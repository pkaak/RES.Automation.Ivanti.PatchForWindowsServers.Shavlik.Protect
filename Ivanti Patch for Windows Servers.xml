<?xml version="1.0"?>
<!-- RES ONE Automation Building Blocks -->
<!-- Created by demo\administrator on 7/18/2017 8:17:12 PM -->
<AutomationManager>
	<buildingblock version="3.0">
		<projects/>
		<modules>
			<module>
				<properties>
					<guid>{375290AC-8C8B-44FB-BE8F-86754468A00E}</guid>
					<name>MachineGroups - Add Endpoint</name>
					<enabled>yes</enabled>
					<description/>
					<version>1.0.2</version>
					<versioncomment>Updated version</versioncomment>
					<properties>
						<separators/>
					</properties>
					<folderpath>
						<folder>
							<name>Ivanti Patch for Windows Servers (Formerly Shavlik Protect)</name>
							<description/>
							<guid>{09CEDC6A-25E1-4A71-8CB9-6799C984D45C}</guid>
							<folder>
								<name>MachineGroups</name>
								<description/>
								<guid>{99524F25-FE43-4EF7-BE81-81D261009667}</guid>
								<folder>
									<name>Endpoint</name>
									<description/>
									<guid>{5653FB79-B658-47A2-B982-E11156CB9DA8}</guid>
								</folder>
							</folder>
						</folder>
					</folderpath>
					<deleteusedresources>yes</deleteusedresources>
				</properties>
				<tasks>
					<task hidden="yes">
						<limitinvoke>no</limitinvoke>
						<parameters>
							<param>
								<name>Result</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>Machine Group name</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="yes" eraseprev="no">yes</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>Endpoint Name</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="yes" eraseprev="no">yes</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>Credential Friendly Name</name>
								<value1>^[Ivanti Patch Credentials]</value1>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="yes" eraseprev="no">yes</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>Endpoint Description</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="yes" eraseprev="no">yes</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
						</parameters>
						<conditions>
							<condition guid="{BD2E8C88-CFCF-4453-A5AE-4966A9A8E681}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
						</conditions>
						<variablescontainer><categories><category><guid>{27518F5C-E766-4839-8168-8EE05FC63130}</guid><name>Ivanti Patch for Windows Servers</name></category></categories><variables><variable><guid>{7DAFD76A-AA65-4A92-959E-78BA9D7E7432}</guid><name>Ivanti Patch Credentials</name><description/><type>0</type><parentguid>{27518F5C-E766-4839-8168-8EE05FC63130}</parentguid><details><value1>administrator</value1></details></variable><variable><guid>{AEE51540-6638-4A65-9F9F-2CC785375AD2}</guid><name>Ivanti Powershell Admin Credentials</name><description/><type>2</type><parentguid>{27518F5C-E766-4839-8168-8EE05FC63130}</parentguid><details><value1>demo\administrator</value1><value2></value2></details></variable></variables></variablescontainer>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{BD2E8C88-CFCF-4453-A5AE-4966A9A8E681}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Machinegroup - Add Endpoint</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username>^[Ivanti Powershell Admin Credentials]</username>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># Set variables
# use $filterCreater = "All" to get all MachineGroups
$MGroupName = "$[Machine Group name]"
$Endpointname ="$[Endpoint Name]"
$CredentialFriendlyName = "$[Credential Friendly Name]"
$EndpointNote = "$[Endpoint Description]"

# Import API module
Import-Module STProtect -force

# create breakline to filter results
# needed because import-module STProtect ALWAYS gives output whatever I try to ignore the text
# Please fix this Shavlik
write-host "&lt;break&gt;"

#check if module is loaded else error out
if (Get-Module -ListAvailable -Name STProtect) {

    # Module STProtect is loaded and available to use
    # Do action!

    Add-MachineGroupItem -EndpointNames $Endpointname -Name $MGroupName -CredentialFriendlyName $CredentialFriendlyName -Note $EndpointNote
 
}
# module not loaded
 else {
    Write-Host "Module does not exist"
}</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[Result]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
				</tasks>
			</module>
			<module>
				<properties>
					<guid>{F98305B1-EA1E-4610-BE39-B5B9DD0CE663}</guid>
					<name>MachineGroups - Remove Endpoint</name>
					<enabled>yes</enabled>
					<description/>
					<version>1.0.1</version>
					<versioncomment>Updated version</versioncomment>
					<properties>
						<separators/>
					</properties>
					<folderpath>
						<folder>
							<name>Ivanti Patch for Windows Servers (Formerly Shavlik Protect)</name>
							<description/>
							<guid>{09CEDC6A-25E1-4A71-8CB9-6799C984D45C}</guid>
							<folder>
								<name>MachineGroups</name>
								<description/>
								<guid>{99524F25-FE43-4EF7-BE81-81D261009667}</guid>
								<folder>
									<name>Endpoint</name>
									<description/>
									<guid>{5653FB79-B658-47A2-B982-E11156CB9DA8}</guid>
								</folder>
							</folder>
						</folder>
					</folderpath>
					<deleteusedresources>yes</deleteusedresources>
				</properties>
				<tasks>
					<task hidden="yes">
						<limitinvoke>no</limitinvoke>
						<parameters>
							<param>
								<name>Result</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>Machine Group name</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="yes" eraseprev="no">yes</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>Endpoint Name</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="yes" eraseprev="no">yes</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
						</parameters>
						<conditions>
							<condition guid="{382FAC6F-1CB4-4E2B-A4EA-C5F826E48932}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
						</conditions>
						<variablescontainer><categories><category><guid>{27518F5C-E766-4839-8168-8EE05FC63130}</guid><name>Ivanti Patch for Windows Servers</name></category></categories><variables><variable><guid>{AEE51540-6638-4A65-9F9F-2CC785375AD2}</guid><name>Ivanti Powershell Admin Credentials</name><description/><type>2</type><parentguid>{27518F5C-E766-4839-8168-8EE05FC63130}</parentguid><details><value1>demo\administrator</value1><value2></value2></details></variable></variables></variablescontainer>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{382FAC6F-1CB4-4E2B-A4EA-C5F826E48932}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Machinegroup - Remove Endpoint</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username>^[Ivanti Powershell Admin Credentials]</username>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># Set variables
# use $filterCreater = "All" to get all MachineGroups
$MGroupName = "$[Machine Group name]"
$Endpointname ="$[Endpoint Name]"

# Import API module
Import-Module STProtect -force

# create breakline to filter results
# needed because import-module STProtect ALWAYS gives output whatever I try to ignore the text
# Please fix this Shavlik
write-host "&lt;break&gt;"

#check if module is loaded else error out
if (Get-Module -ListAvailable -Name STProtect) {

    # Module STProtect is loaded and available to use
    # Do action!

    Remove-MachineGroupItem -EndpointNames $Endpointname -Name $MGroupName
 
}
# module not loaded
 else {
    Write-Host "Module does not exist"
}</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[Result]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
				</tasks>
			</module>
			<module>
				<properties>
					<guid>{29FA3A08-B734-4427-A8A7-15114A4F0462}</guid>
					<name>MachineGroups - Add Credentials</name>
					<enabled>yes</enabled>
					<description/>
					<version>1.0.3</version>
					<versioncomment>Updated version</versioncomment>
					<properties>
						<separators/>
					</properties>
					<folderpath>
						<folder>
							<name>Ivanti Patch for Windows Servers (Formerly Shavlik Protect)</name>
							<description/>
							<guid>{09CEDC6A-25E1-4A71-8CB9-6799C984D45C}</guid>
							<folder>
								<name>MachineGroups</name>
								<description/>
								<guid>{99524F25-FE43-4EF7-BE81-81D261009667}</guid>
							</folder>
						</folder>
					</folderpath>
					<deleteusedresources>yes</deleteusedresources>
				</properties>
				<tasks>
					<task hidden="yes">
						<limitinvoke>no</limitinvoke>
						<parameters>
							<param>
								<name>Result</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>Machine Group name</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="yes" eraseprev="no">yes</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>Friendly Credential Name</name>
								<value1>^[Ivanti Patch Credentials]</value1>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="yes" eraseprev="no">yes</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
						</parameters>
						<conditions>
							<condition guid="{239977F8-3F2B-41B1-B931-48ABDBD31EF3}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
						</conditions>
						<variablescontainer><categories><category><guid>{27518F5C-E766-4839-8168-8EE05FC63130}</guid><name>Ivanti Patch for Windows Servers</name></category></categories><variables><variable><guid>{7DAFD76A-AA65-4A92-959E-78BA9D7E7432}</guid><name>Ivanti Patch Credentials</name><description/><type>0</type><parentguid>{27518F5C-E766-4839-8168-8EE05FC63130}</parentguid><details><value1>administrator</value1></details></variable><variable><guid>{AEE51540-6638-4A65-9F9F-2CC785375AD2}</guid><name>Ivanti Powershell Admin Credentials</name><description/><type>2</type><parentguid>{27518F5C-E766-4839-8168-8EE05FC63130}</parentguid><details><value1>demo\administrator</value1><value2></value2></details></variable></variables></variablescontainer>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{239977F8-3F2B-41B1-B931-48ABDBD31EF3}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Machinegroup - Add Credentials</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username>^[Ivanti Powershell Admin Credentials]</username>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># Set variables
# use $filterCreater = "All" to get all MachineGroups
$MGroupName = "$[Machine Group name]"
$CredentialFriendlyName = "$[Friendly Credential Name]"

# Import API module
Import-Module STProtect -force

# create breakline to filter results
# needed because import-module STProtect ALWAYS gives output whatever I try to ignore the text
# Please fix this Shavlik
write-host "&lt;break&gt;"

#check if module is loaded else error out
if (Get-Module -ListAvailable -Name STProtect) {

    # Module STProtect is loaded and available to use
    # Do action!

    Set-MachineGroupCredential -Name $Mgroupname -CredentialFriendlyName $CredentialFriendlyName
 
}
# module not loaded
 else {
    Write-Host "Module does not exist"
}</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[Result]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
				</tasks>
			</module>
			<module>
				<properties>
					<guid>{D544EA6D-8AB5-4A92-9CF2-B8CE5ECB8B8C}</guid>
					<name>MachineGroups - Create</name>
					<enabled>yes</enabled>
					<description/>
					<version>1.0.3</version>
					<versioncomment>Updated version</versioncomment>
					<properties>
						<separators/>
					</properties>
					<folderpath>
						<folder>
							<name>Ivanti Patch for Windows Servers (Formerly Shavlik Protect)</name>
							<description/>
							<guid>{09CEDC6A-25E1-4A71-8CB9-6799C984D45C}</guid>
							<folder>
								<name>MachineGroups</name>
								<description/>
								<guid>{99524F25-FE43-4EF7-BE81-81D261009667}</guid>
							</folder>
						</folder>
					</folderpath>
					<deleteusedresources>yes</deleteusedresources>
				</properties>
				<tasks>
					<task hidden="yes">
						<limitinvoke>no</limitinvoke>
						<parameters>
							<param>
								<name>Result</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>Machine Group name</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="yes" eraseprev="no">yes</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>Machine Group Description</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="yes" eraseprev="no">yes</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
						</parameters>
						<conditions>
							<condition guid="{8F2AC3A7-6711-4333-AD5E-A968A4A67BFD}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
						</conditions>
						<variablescontainer><categories><category><guid>{27518F5C-E766-4839-8168-8EE05FC63130}</guid><name>Ivanti Patch for Windows Servers</name></category></categories><variables><variable><guid>{AEE51540-6638-4A65-9F9F-2CC785375AD2}</guid><name>Ivanti Powershell Admin Credentials</name><description/><type>2</type><parentguid>{27518F5C-E766-4839-8168-8EE05FC63130}</parentguid><details><value1>demo\administrator</value1><value2></value2></details></variable></variables></variablescontainer>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{8F2AC3A7-6711-4333-AD5E-A968A4A67BFD}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Machinegroup - Create</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username>^[Ivanti Powershell Admin Credentials]</username>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># Set variables
$MGroupName = "$[Machine Group name]"
$MGroupDescription = "$[Machine Group Description]"

# Import API module
Import-Module STProtect -force

# create breakline to filter results
# needed because import-module STProtect ALWAYS gives output whatever I try to ignore the text
# Please fix this Shavlik
write-host "&lt;break&gt;"

#check if module is loaded else error out
if (Get-Module -ListAvailable -Name STProtect) {

    # Module STProtect is loaded and available to use
    # Do action!

    Add-MachineGroup -Name $mgroupname -Description $mgroupdescription
 
}
# module not loaded
 else {
    Write-Host "Module does not exist"
}</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[Result]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
				</tasks>
			</module>
			<module>
				<properties>
					<guid>{2437F21F-6D6F-4B86-9B3E-D208069502FF}</guid>
					<name>MachineGroups - Delete</name>
					<enabled>yes</enabled>
					<description/>
					<version>1.0.2</version>
					<versioncomment>Updated version</versioncomment>
					<properties>
						<separators/>
					</properties>
					<folderpath>
						<folder>
							<name>Ivanti Patch for Windows Servers (Formerly Shavlik Protect)</name>
							<description/>
							<guid>{09CEDC6A-25E1-4A71-8CB9-6799C984D45C}</guid>
							<folder>
								<name>MachineGroups</name>
								<description/>
								<guid>{99524F25-FE43-4EF7-BE81-81D261009667}</guid>
							</folder>
						</folder>
					</folderpath>
					<deleteusedresources>yes</deleteusedresources>
				</properties>
				<tasks>
					<task hidden="yes">
						<limitinvoke>no</limitinvoke>
						<parameters>
							<param>
								<name>Result</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>Machine Group name</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="yes" eraseprev="no">yes</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
						</parameters>
						<conditions>
							<condition guid="{25FF3155-24DE-4A57-B5E2-533172D54C88}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
						</conditions>
						<variablescontainer><categories><category><guid>{27518F5C-E766-4839-8168-8EE05FC63130}</guid><name>Ivanti Patch for Windows Servers</name></category></categories><variables><variable><guid>{AEE51540-6638-4A65-9F9F-2CC785375AD2}</guid><name>Ivanti Powershell Admin Credentials</name><description/><type>2</type><parentguid>{27518F5C-E766-4839-8168-8EE05FC63130}</parentguid><details><value1>demo\administrator</value1><value2></value2></details></variable></variables></variablescontainer>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{25FF3155-24DE-4A57-B5E2-533172D54C88}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Machinegroup - Delete</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username>^[Ivanti Powershell Admin Credentials]</username>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># Set variables
$MGroupName = "$[Machine Group name]"

# Import API module
Import-Module STProtect -force

# create breakline to filter results
# needed because import-module STProtect ALWAYS gives output whatever I try to ignore the text
# Please fix this Shavlik
write-host "&lt;break&gt;"

#check if module is loaded else error out
if (Get-Module -ListAvailable -Name STProtect) {

    # Module STProtect is loaded and available to use
    # Do action!

    Remove-MachineGroup -Name $MGroupName -Confirm:$false
 
}
# module not loaded
 else {
    Write-Host "Module does not exist"
}</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[Result]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
				</tasks>
			</module>
			<module>
				<properties>
					<guid>{DC9DD685-67AA-4B3F-A5CB-186C1F4D7EAE}</guid>
					<name>MachineGroups - Get</name>
					<enabled>yes</enabled>
					<description/>
					<version>1.0.8</version>
					<versioncomment>Updated version</versioncomment>
					<properties>
						<separators/>
					</properties>
					<folderpath>
						<folder>
							<name>Ivanti Patch for Windows Servers (Formerly Shavlik Protect)</name>
							<description/>
							<guid>{09CEDC6A-25E1-4A71-8CB9-6799C984D45C}</guid>
							<folder>
								<name>MachineGroups</name>
								<description/>
								<guid>{99524F25-FE43-4EF7-BE81-81D261009667}</guid>
							</folder>
						</folder>
					</folderpath>
					<deleteusedresources>yes</deleteusedresources>
				</properties>
				<tasks>
					<task hidden="yes">
						<limitinvoke>no</limitinvoke>
						<parameters>
							<param>
								<name>Result</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>FilterCreator</name>
								<value1>All</value1>
								<value2/>
								<value3/>
								<type>0</type>
								<description>Show only  Machine Groups from a specific Creator.
Type in Creator name or
Use "All" to show all Machine Groups</description>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="yes" eraseprev="no">yes</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
						</parameters>
						<conditions>
							<condition guid="{BD54A26A-A991-4730-AAFC-52B56506D0B9}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
							<condition guid="{2193831E-FF21-46C6-A142-9C4BD0F1ACA3}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
						</conditions>
						<variablescontainer><categories><category><guid>{27518F5C-E766-4839-8168-8EE05FC63130}</guid><name>Ivanti Patch for Windows Servers</name></category></categories><variables><variable><guid>{AEE51540-6638-4A65-9F9F-2CC785375AD2}</guid><name>Ivanti Powershell Admin Credentials</name><description/><type>2</type><parentguid>{27518F5C-E766-4839-8168-8EE05FC63130}</parentguid><details><value1>demo\administrator</value1><value2></value2></details></variable></variables></variablescontainer>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{BD54A26A-A991-4730-AAFC-52B56506D0B9}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Get-MachineGroups</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username>^[Ivanti Powershell Admin Credentials]</username>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># Set variables
# use $filterCreater = "All" to get all MachineGroups
$filterCreator = "$[FilterCreator]"

$return = ""
$firstfound = "False"

# Import API module
Import-Module STProtect -force

# create breakline to filter results
# needed because import-module STProtect ALWAYS gives output whatever I try to ignore the text
# Please fix this Shavlik
write-host "&lt;break&gt;"

#check if module is loaded else error out
if (Get-Module -ListAvailable -Name STProtect) {

    # Module STProtect is loaded and available to use
    # Do action!

    $MachineGroups = Get-MachineGroup
    
    # built Return string
    # string contains all machinegroups, seperated with a |
    $Total = $MachineGroups.Count
    for ($count=0;$count -lt $Total; $count++) {
        #Filter Creators
        if ($filterCreator -eq "All") {
            if ($count -eq 0) { $return = $MachineGroups[$count].name }
            else { $return = $return + "|" + $machinegroups[$count].name }
            }
        else {
            if ($filterCreator -eq $MachineGroups[$count].Creator) {
                if ($firstfound -eq "False") { 
                    $return = $MachineGroups[$count].name
                    $firstfound = "True" 
                    }
            else { $return = $return + "|" + $machinegroups[$count].name }
            }
        }
    }

    # echo the returnstring
    $return
 
}
# module not loaded
 else {
    Write-Host "Module does not exist"
}</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[Result]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{2193831E-FF21-46C6-A142-9C4BD0F1ACA3}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Filter output to something usable by deleting the import-module debug info</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username/>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># split string so import-module information is filtered out
# this is done by filtering everything before &lt;split&gt; within the string

$input = "$[Result]"
$input -split "&lt;break&gt;" | select -Last 1</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[Result]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
				</tasks>
			</module>
			<module>
				<properties>
					<guid>{1D6991EF-DB6D-408A-BC0C-B8A9517D121C}</guid>
					<name>Patch Deploy - Deployed patches report</name>
					<enabled>yes</enabled>
					<description/>
					<version>1.0.2</version>
					<versioncomment>Updated version</versioncomment>
					<properties>
						<separators/>
					</properties>
					<folderpath>
						<folder>
							<name>Ivanti Patch for Windows Servers (Formerly Shavlik Protect)</name>
							<description/>
							<guid>{09CEDC6A-25E1-4A71-8CB9-6799C984D45C}</guid>
							<folder>
								<name>Patch Deploy</name>
								<description/>
								<guid>{D8DCDEE7-4761-4680-B751-95CE5F4C8CDB}</guid>
							</folder>
						</folder>
					</folderpath>
					<deleteusedresources>yes</deleteusedresources>
				</properties>
				<tasks>
					<task hidden="yes">
						<limitinvoke>no</limitinvoke>
						<parameters>
							<param>
								<name>Result</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>DeployUID</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
						</parameters>
						<conditions>
							<condition guid="{071AF159-3BF3-480C-A7F6-F54E07550DA8}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
							<condition guid="{29C9E06C-B95B-4860-9ADA-369F1761E823}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
						</conditions>
						<variablescontainer><categories><category><guid>{27518F5C-E766-4839-8168-8EE05FC63130}</guid><name>Ivanti Patch for Windows Servers</name></category></categories><variables><variable><guid>{AEE51540-6638-4A65-9F9F-2CC785375AD2}</guid><name>Ivanti Powershell Admin Credentials</name><description/><type>2</type><parentguid>{27518F5C-E766-4839-8168-8EE05FC63130}</parentguid><details><value1>demo\administrator</value1><value2></value2></details></variable></variables></variablescontainer>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{071AF159-3BF3-480C-A7F6-F54E07550DA8}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Patch Deploy - Patch States</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username>^[Ivanti Powershell Admin Credentials]</username>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># Set variables
$uid = "$[DeployUID]"

# Import API module
Import-Module STProtect -force

# create breakline to filter results
# needed because import-module STProtect ALWAYS gives output whatever I try to ignore the text
# Please fix this Shavlik
write-host "&lt;break&gt;"

#check if module is loaded else error out
if (Get-Module -ListAvailable -Name STProtect) {

    # Module STProtect is loaded and available to use
    # Do action!

    $patchdeploy = watch-PatchDeploy -uid $uid

    # Return info, output for ROID
    # Seperate columns by ;
    # Seperate rows by |
    # endpointname;bulletin;kb;overall state;status description;start date;end date
    
    # Count returns and reset result
    $max = $patchdeploy.count-1
    $result = ""

    for ($count=0; $count -le $max; $count++) {
        $maxpatchcount = $patchdeploy[$count].patchstates.count - 1
        for ($patchcount=0; $patchcount -le $maxpatchcount; $patchcount++) {

            if ($count -eq 0 -and $patchcount -eq 0) {
                $result = $patchdeploy.Name +";"+ $patchdeploy[$count].patchstates[$patchcount].bulletin +";"+ $patchdeploy[$count].patchstates[$patchcount].kb +";"+ $patchdeploy[$count].patchstates[$patchcount].OverallState +";"+ $patchdeploy[$count].patchstates[$patchcount].statusdescription +";"+ $patchdeploy[$count].patchstates[$patchcount].startedon +";"+ $patchdeploy[$count].patchstates[$patchcount].lastupdated
            }
            else {
                $result = $result + "|" + $patchdeploy.Name +";"+ $patchdeploy[$count].patchstates[$patchcount].bulletin +";"+ $patchdeploy[$count].patchstates[$patchcount].kb +";"+ $patchdeploy[$count].patchstates[$patchcount].OverallState +";"+ $patchdeploy[$count].patchstates[$patchcount].statusdescription +";"+ $patchdeploy[$count].patchstates[$patchcount].startedon +";"+ $patchdeploy[$count].patchstates[$patchcount].lastupdated
            } 
        }
        
    }

    #show result
    $result
}
# module not loaded
 else {
    Write-Host "Module does not exist"
}

</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[Result]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{29C9E06C-B95B-4860-9ADA-369F1761E823}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Filter output to something usable by deleting the import-module debug info</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username/>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># split string so import-module information is filtered out
# this is done by filtering everything before &lt;split&gt; within the string

$input = "$[Result]"
$input -split "&lt;break&gt;" | select -Last 1</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[Result]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
				</tasks>
			</module>
			<module>
				<properties>
					<guid>{4373E5F4-D4F4-4FEC-B592-360E91207409}</guid>
					<name>Patch Deploy - Download</name>
					<enabled>yes</enabled>
					<description/>
					<version>1.0.1</version>
					<versioncomment>Updated version</versioncomment>
					<properties>
						<separators/>
					</properties>
					<folderpath>
						<folder>
							<name>Ivanti Patch for Windows Servers (Formerly Shavlik Protect)</name>
							<description/>
							<guid>{09CEDC6A-25E1-4A71-8CB9-6799C984D45C}</guid>
							<folder>
								<name>Patch Deploy</name>
								<description/>
								<guid>{D8DCDEE7-4761-4680-B751-95CE5F4C8CDB}</guid>
							</folder>
						</folder>
					</folderpath>
					<deleteusedresources>yes</deleteusedresources>
				</properties>
				<tasks>
					<task hidden="yes">
						<limitinvoke>no</limitinvoke>
						<parameters>
							<param>
								<name>Result</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>UID</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description>Patch Scan UID</description>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
						</parameters>
						<conditions>
							<condition guid="{E803176E-1D28-469C-9562-40656F682138}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
						</conditions>
						<variablescontainer><categories><category><guid>{27518F5C-E766-4839-8168-8EE05FC63130}</guid><name>Ivanti Patch for Windows Servers</name></category></categories><variables><variable><guid>{AEE51540-6638-4A65-9F9F-2CC785375AD2}</guid><name>Ivanti Powershell Admin Credentials</name><description/><type>2</type><parentguid>{27518F5C-E766-4839-8168-8EE05FC63130}</parentguid><details><value1>demo\administrator</value1><value2></value2></details></variable></variables></variablescontainer>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{E803176E-1D28-469C-9562-40656F682138}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Patch Deploy - Download</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username>^[Ivanti Powershell Admin Credentials]</username>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># Set variables
$uid ="$[UID]"

# Import API module
Import-Module STProtect -force

# create breakline to filter results
# needed because import-module STProtect ALWAYS gives output whatever I try to ignore the text
# Please fix this Shavlik
write-host "&lt;break&gt;"

#check if module is loaded else error out
if (Get-Module -ListAvailable -Name STProtect) {

    # Module STProtect is loaded and available to use
    # Do action!

    Invoke-DownloadMissingPatches -scanuid $uid

    # there is no feedback from this command even if the scanID cannot be found
}
# module not loaded
 else {
    Write-Host "Module does not exist"
}

</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[Result]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
				</tasks>
			</module>
			<module>
				<properties>
					<guid>{730F8F75-1131-46FB-AF36-5E2C9B8845C5}</guid>
					<name>Patch Deploy - Start</name>
					<enabled>yes</enabled>
					<description/>
					<version>1.0.2</version>
					<versioncomment>Updated version</versioncomment>
					<properties>
						<separators/>
					</properties>
					<folderpath>
						<folder>
							<name>Ivanti Patch for Windows Servers (Formerly Shavlik Protect)</name>
							<description/>
							<guid>{09CEDC6A-25E1-4A71-8CB9-6799C984D45C}</guid>
							<folder>
								<name>Patch Deploy</name>
								<description/>
								<guid>{D8DCDEE7-4761-4680-B751-95CE5F4C8CDB}</guid>
							</folder>
						</folder>
					</folderpath>
					<deleteusedresources>yes</deleteusedresources>
				</properties>
				<tasks>
					<task hidden="yes">
						<limitinvoke>no</limitinvoke>
						<parameters>
							<param>
								<name>Result</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>UID</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description>Patch Scan UID</description>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>DeployUID</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
						</parameters>
						<conditions>
							<condition guid="{13994BDF-7939-4F0F-B484-671068A59437}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
							<condition guid="{24B4E487-E6B3-4AB4-A6E1-17402C9D2C93}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
						</conditions>
						<variablescontainer><categories><category><guid>{27518F5C-E766-4839-8168-8EE05FC63130}</guid><name>Ivanti Patch for Windows Servers</name></category></categories><variables><variable><guid>{AEE51540-6638-4A65-9F9F-2CC785375AD2}</guid><name>Ivanti Powershell Admin Credentials</name><description/><type>2</type><parentguid>{27518F5C-E766-4839-8168-8EE05FC63130}</parentguid><details><value1>demo\administrator</value1><value2></value2></details></variable></variables></variablescontainer>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{13994BDF-7939-4F0F-B484-671068A59437}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Patch Deploy - Start</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username>^[Ivanti Powershell Admin Credentials]</username>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># Set variables
$uid ="$[UID]"

# Import API module
Import-Module STProtect -force

# create breakline to filter results
# needed because import-module STProtect ALWAYS gives output whatever I try to ignore the text
# Please fix this Shavlik
write-host "&lt;break&gt;"

#check if module is loaded else error out
if (Get-Module -ListAvailable -Name STProtect) {

    # Module STProtect is loaded and available to use
    # Do action!

    $patchdeploy = Start-PatchDeploy -scanuid $uid
    Wait-PatchDeploy -Uid $patchdeploy.uid.Guid
    

    # return value
    $patchdeploy.uid.Guid
}
# module not loaded
 else {
    Write-Host "Module does not exist"
}</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>60</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[Result]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{24B4E487-E6B3-4AB4-A6E1-17402C9D2C93}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Filter output to something usable by deleting the import-module debug info</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username/>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># split string so import-module information is filtered out
# this is done by filtering everything before &lt;split&gt; within the string

$input = "$[Result]"
$input -split "&lt;break&gt;" | select -Last 1</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[DeployUID]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
				</tasks>
			</module>
			<module>
				<properties>
					<guid>{DEE5AE46-9642-4AD2-8C8C-E2258B30F6A8}</guid>
					<name>Patch Deploy - Start (no wait)</name>
					<enabled>yes</enabled>
					<description/>
					<version>1.0.1</version>
					<versioncomment>Updated version</versioncomment>
					<properties>
						<separators/>
					</properties>
					<folderpath>
						<folder>
							<name>Ivanti Patch for Windows Servers (Formerly Shavlik Protect)</name>
							<description/>
							<guid>{09CEDC6A-25E1-4A71-8CB9-6799C984D45C}</guid>
							<folder>
								<name>Patch Deploy</name>
								<description/>
								<guid>{D8DCDEE7-4761-4680-B751-95CE5F4C8CDB}</guid>
							</folder>
						</folder>
					</folderpath>
					<deleteusedresources>yes</deleteusedresources>
				</properties>
				<tasks>
					<task hidden="yes">
						<limitinvoke>no</limitinvoke>
						<parameters>
							<param>
								<name>Result</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>UID</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description>Patch Scan UID</description>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>DeployUID</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
						</parameters>
						<conditions>
							<condition guid="{5266A734-CBF5-47E9-9FCF-65E02F72B5CF}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
							<condition guid="{A75BAD2F-415F-49F5-8967-34987C03ACE8}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
						</conditions>
						<variablescontainer><categories><category><guid>{27518F5C-E766-4839-8168-8EE05FC63130}</guid><name>Ivanti Patch for Windows Servers</name></category></categories><variables><variable><guid>{AEE51540-6638-4A65-9F9F-2CC785375AD2}</guid><name>Ivanti Powershell Admin Credentials</name><description/><type>2</type><parentguid>{27518F5C-E766-4839-8168-8EE05FC63130}</parentguid><details><value1>demo\administrator</value1><value2></value2></details></variable></variables></variablescontainer>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{5266A734-CBF5-47E9-9FCF-65E02F72B5CF}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Patch Deploy - Start (do not wait till finished)</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username>^[Ivanti Powershell Admin Credentials]</username>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># Set variables
$uid ="$[UID]"

# Import API module
Import-Module STProtect -force

# create breakline to filter results
# needed because import-module STProtect ALWAYS gives output whatever I try to ignore the text
# Please fix this Shavlik
write-host "&lt;break&gt;"

#check if module is loaded else error out
if (Get-Module -ListAvailable -Name STProtect) {

    # Module STProtect is loaded and available to use
    # Do action!

    $patchdeploy = Start-PatchDeploy -scanuid $uid

    # return value
    $patchdeploy.uid.Guid
}
# module not loaded
 else {
    Write-Host "Module does not exist"
}

</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[Result]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{A75BAD2F-415F-49F5-8967-34987C03ACE8}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Filter output to something usable by deleting the import-module debug info</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username/>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># split string so import-module information is filtered out
# this is done by filtering everything before &lt;split&gt; within the string

$input = "$[Result]"
$input -split "&lt;break&gt;" | select -Last 1</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[DeployUID]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
				</tasks>
			</module>
			<module>
				<properties>
					<guid>{CB29009C-E694-4131-9AD9-B92FEF22992D}</guid>
					<name>Patch Deploy - Wait</name>
					<enabled>yes</enabled>
					<description/>
					<version>1.0.3</version>
					<versioncomment>Updated version</versioncomment>
					<properties>
						<separators/>
					</properties>
					<folderpath>
						<folder>
							<name>Ivanti Patch for Windows Servers (Formerly Shavlik Protect)</name>
							<description/>
							<guid>{09CEDC6A-25E1-4A71-8CB9-6799C984D45C}</guid>
							<folder>
								<name>Patch Deploy</name>
								<description/>
								<guid>{D8DCDEE7-4761-4680-B751-95CE5F4C8CDB}</guid>
							</folder>
						</folder>
					</folderpath>
					<deleteusedresources>yes</deleteusedresources>
				</properties>
				<tasks>
					<task hidden="yes">
						<limitinvoke>no</limitinvoke>
						<parameters>
							<param>
								<name>Result</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>DeployUID</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
						</parameters>
						<conditions>
							<condition guid="{338694DA-4675-4938-A7B6-EDBBE13E20A6}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
								<setparametertrue>no</setparametertrue>
								<parametertrue>Result</parametertrue>
								<setparameter>no</setparameter>
								<parameter>Result</parameter>
							</condition>
						</conditions>
						<variablescontainer><categories><category><guid>{27518F5C-E766-4839-8168-8EE05FC63130}</guid><name>Ivanti Patch for Windows Servers</name></category></categories><variables><variable><guid>{AEE51540-6638-4A65-9F9F-2CC785375AD2}</guid><name>Ivanti Powershell Admin Credentials</name><description/><type>2</type><parentguid>{27518F5C-E766-4839-8168-8EE05FC63130}</parentguid><details><value1>demo\administrator</value1><value2></value2></details></variable></variables></variablescontainer>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{338694DA-4675-4938-A7B6-EDBBE13E20A6}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Patch Deploy - Wait</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username>^[Ivanti Powershell Admin Credentials]</username>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># Set variables
$uid ="$[DeployUID]"

# Import API module
Import-Module STProtect -force

# create breakline to filter results
# needed because import-module STProtect ALWAYS gives output whatever I try to ignore the text
# Please fix this Shavlik
write-host "&lt;break&gt;"

#check if module is loaded else error out
if (Get-Module -ListAvailable -Name STProtect) {

    # Module STProtect is loaded and available to use
    # Do action!

    wait-PatchDeploy -uid $uid

    # return value
    
}
# module not loaded
 else {
    Write-Host "Module does not exist"
}</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>60</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[Result]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
				</tasks>
			</module>
			<module>
				<properties>
					<guid>{2419086E-0E2F-4355-9E6B-8BB14422CF49}</guid>
					<name>Patch Deploy - Watch / Results</name>
					<enabled>yes</enabled>
					<description/>
					<version>1.0.1</version>
					<versioncomment>Updated version</versioncomment>
					<properties>
						<separators/>
					</properties>
					<folderpath>
						<folder>
							<name>Ivanti Patch for Windows Servers (Formerly Shavlik Protect)</name>
							<description/>
							<guid>{09CEDC6A-25E1-4A71-8CB9-6799C984D45C}</guid>
							<folder>
								<name>Patch Deploy</name>
								<description/>
								<guid>{D8DCDEE7-4761-4680-B751-95CE5F4C8CDB}</guid>
							</folder>
						</folder>
					</folderpath>
					<deleteusedresources>yes</deleteusedresources>
				</properties>
				<tasks>
					<task hidden="yes">
						<limitinvoke>no</limitinvoke>
						<parameters>
							<param>
								<name>Result</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>DeployUID</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
						</parameters>
						<conditions>
							<condition guid="{1FAC9E62-D659-4520-9158-008633D27ADD}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
							<condition guid="{D5E8E464-459C-460B-B16C-D57188BC85CF}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
						</conditions>
						<variablescontainer><categories><category><guid>{27518F5C-E766-4839-8168-8EE05FC63130}</guid><name>Ivanti Patch for Windows Servers</name></category></categories><variables><variable><guid>{AEE51540-6638-4A65-9F9F-2CC785375AD2}</guid><name>Ivanti Powershell Admin Credentials</name><description/><type>2</type><parentguid>{27518F5C-E766-4839-8168-8EE05FC63130}</parentguid><details><value1>demo\administrator</value1><value2></value2></details></variable></variables></variablescontainer>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{1FAC9E62-D659-4520-9158-008633D27ADD}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Patch Deploy - Watch</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username>^[Ivanti Powershell Admin Credentials]</username>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># Set variables
$uid ="$[DeployUID]"

# Import API module
Import-Module STProtect -force

# create breakline to filter results
# needed because import-module STProtect ALWAYS gives output whatever I try to ignore the text
# Please fix this Shavlik
write-host "&lt;break&gt;"

#check if module is loaded else error out
if (Get-Module -ListAvailable -Name STProtect) {

    # Module STProtect is loaded and available to use
    # Do action!

    $patchdeploy = watch-PatchDeploy -uid $uid

    # Return info, output for ROID
    # Seperate columns by ;
    # Seperate rows by |
    # endpoint;domain;IP Address;Completed Patches;Overall State;Last Updated;errorcode;statusdescription
    
    # Count returns and reset result
    $max = $patchdeploy.count-1
    $result = ""

    for ($count=0; $count -le $max; $count++) {
        if ($count -eq 0) {
            $result = $patchdeploy[$count].Name +";"+ $patchdeploy[$count].Domain +";"+ $patchdeploy[$count].Address +";"+$patchdeploy[$count].CompletedPatches +";"+  $patchdeploy[$count].OverallState +";"+ $patchdeploy[$count].LastUpdated +";"+ $patchdeploy[$count].Errorcode +";"+ $patchdeploy[$count].StatusDescription
        }
        else {
            $result = $result +"|"+ $patchdeploy[$count].Name +";"+ $patchdeploy[$count].Domain +";"+ $patchdeploy[$count].Address +";"+$patchdeploy[$count].CompletedPatches +";"+  $patchdeploy[$count].OverallState +";"+ $patchdeploy[$count].LastUpdated +";"+ $patchdeploy[$count].Errorcode +";"+ $patchdeploy[$count].StatusDescription
        }
    }
}
# module not loaded
 else {
    Write-Host "Module does not exist"
}

</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[Result]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{D5E8E464-459C-460B-B16C-D57188BC85CF}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Filter output to something usable by deleting the import-module debug info</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username/>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># split string so import-module information is filtered out
# this is done by filtering everything before &lt;split&gt; within the string

$input = "$[Result]"
$input -split "&lt;break&gt;" | select -Last 1</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[Result]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
				</tasks>
			</module>
			<module>
				<properties>
					<guid>{B9C907C8-2EBD-4F40-8674-A8466B0A32EE}</guid>
					<name>Patch Scan - Start Endpoint</name>
					<enabled>yes</enabled>
					<description/>
					<version>1.0.4</version>
					<versioncomment>Updated version</versioncomment>
					<properties>
						<separators/>
					</properties>
					<folderpath>
						<folder>
							<name>Ivanti Patch for Windows Servers (Formerly Shavlik Protect)</name>
							<description/>
							<guid>{09CEDC6A-25E1-4A71-8CB9-6799C984D45C}</guid>
							<folder>
								<name>Patch Scan</name>
								<description/>
								<guid>{E8C9F543-6EE8-4D9B-98CA-9FDBF9E046A7}</guid>
							</folder>
						</folder>
					</folderpath>
					<deleteusedresources>yes</deleteusedresources>
				</properties>
				<tasks>
					<task hidden="yes">
						<limitinvoke>no</limitinvoke>
						<parameters>
							<param>
								<name>Result</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>Endpoint Name</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="yes" eraseprev="no">yes</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>Credential Friendly Name</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="yes" eraseprev="no">yes</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>UID</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description>Patch Scan UID</description>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
						</parameters>
						<conditions>
							<condition guid="{C37F601F-3C42-46F4-A18C-9A37331C1CCC}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
							<condition guid="{C36C4079-4613-4E1D-8669-139DE4C95DD9}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
						</conditions>
						<variablescontainer><categories><category><guid>{27518F5C-E766-4839-8168-8EE05FC63130}</guid><name>Ivanti Patch for Windows Servers</name></category></categories><variables><variable><guid>{AEE51540-6638-4A65-9F9F-2CC785375AD2}</guid><name>Ivanti Powershell Admin Credentials</name><description/><type>2</type><parentguid>{27518F5C-E766-4839-8168-8EE05FC63130}</parentguid><details><value1>demo\administrator</value1><value2></value2></details></variable></variables></variablescontainer>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{C37F601F-3C42-46F4-A18C-9A37331C1CCC}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Start Patch Scan - Endpoint</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username>^[Ivanti Powershell Admin Credentials]</username>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># Set variables
$Endpointname ="$[Endpoint Name]"
$credentialFriendlyName = "$[Credential Friendly Name]"

# Import API module
Import-Module STProtect -force

# create breakline to filter results
# needed because import-module STProtect ALWAYS gives output whatever I try to ignore the text
# Please fix this Shavlik
write-host "&lt;break&gt;"

#check if module is loaded else error out
if (Get-Module -ListAvailable -Name STProtect) {

    # Module STProtect is loaded and available to use
    # Do action!

    $patchscan = Start-PatchScan -CredentialFriendlyName $credentialFriendlyName -EndpointNames $Endpointname
    
    # Show UID
    $patchscan.Uid.guid

}
# module not loaded
 else {
    Write-Host "Module does not exist"
}</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[Result]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{C36C4079-4613-4E1D-8669-139DE4C95DD9}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Filter output to something usable by deleting the import-module debug info</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username/>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># split string so import-module information is filtered out
# this is done by filtering everything before &lt;split&gt; within the string

$input = "$[Result]"
$input -split "&lt;break&gt;" | select -Last 1</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[UID]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
				</tasks>
			</module>
			<module>
				<properties>
					<guid>{230086B2-D7B4-45A7-9AD3-30B30D495F75}</guid>
					<name>Patch Scan - Start MachineGroup</name>
					<enabled>yes</enabled>
					<description/>
					<version>1.0.4</version>
					<versioncomment>Updated version</versioncomment>
					<properties>
						<separators/>
					</properties>
					<folderpath>
						<folder>
							<name>Ivanti Patch for Windows Servers (Formerly Shavlik Protect)</name>
							<description/>
							<guid>{09CEDC6A-25E1-4A71-8CB9-6799C984D45C}</guid>
							<folder>
								<name>Patch Scan</name>
								<description/>
								<guid>{E8C9F543-6EE8-4D9B-98CA-9FDBF9E046A7}</guid>
							</folder>
						</folder>
					</folderpath>
					<deleteusedresources>yes</deleteusedresources>
				</properties>
				<tasks>
					<task hidden="yes">
						<limitinvoke>no</limitinvoke>
						<parameters>
							<param>
								<name>Result</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>Credential Friendly Name</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="yes" eraseprev="no">yes</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>UID</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description>Patch Scan UID</description>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>Machine Group Name</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="yes" eraseprev="no">yes</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
						</parameters>
						<conditions>
							<condition guid="{06B4DE76-FF4C-4FD1-9970-07DD6CCF2224}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
							<condition guid="{1D393F67-9B8F-4C4B-A015-411C70C76110}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
						</conditions>
						<variablescontainer><categories><category><guid>{27518F5C-E766-4839-8168-8EE05FC63130}</guid><name>Ivanti Patch for Windows Servers</name></category></categories><variables><variable><guid>{AEE51540-6638-4A65-9F9F-2CC785375AD2}</guid><name>Ivanti Powershell Admin Credentials</name><description/><type>2</type><parentguid>{27518F5C-E766-4839-8168-8EE05FC63130}</parentguid><details><value1>demo\administrator</value1><value2></value2></details></variable></variables></variablescontainer>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{06B4DE76-FF4C-4FD1-9970-07DD6CCF2224}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Start Patch Scan - MachineGroup</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username>^[Ivanti Powershell Admin Credentials]</username>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># Set variables
$MGroupName = "$[Machine Group Name]"
$credentialFriendlyName = "$[Credential Friendly Name]"


# Import API module
Import-Module STProtect -force

# create breakline to filter results
# needed because import-module STProtect ALWAYS gives output whatever I try to ignore the text
# Please fix this Shavlik
write-host "&lt;break&gt;"

#check if module is loaded else error out
if (Get-Module -ListAvailable -Name STProtect) {

    # Module STProtect is loaded and available to use
    # Do action!

    $patchscan = Start-PatchScan -CredentialFriendlyName $credentialFriendlyName -MachineGroups $MGroupName
    
    # Show UID
    $patchscan.Uid

}
# module not loaded
 else {
    Write-Host "Module does not exist"
}</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[Result]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{1D393F67-9B8F-4C4B-A015-411C70C76110}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Filter output to something usable by deleting the import-module debug info</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username/>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># split string so import-module information is filtered out
# this is done by filtering everything before &lt;split&gt; within the string

$input = "$[Result]"
$input -split "&lt;break&gt;" | select -Last 1</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[UID]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
				</tasks>
			</module>
			<module>
				<properties>
					<guid>{0D8BA277-4F3A-4031-8DDA-2DB9BB28630B}</guid>
					<name>Patch Scan - Wait</name>
					<enabled>yes</enabled>
					<description/>
					<version>1.0.4</version>
					<versioncomment>Updated version</versioncomment>
					<properties>
						<separators/>
					</properties>
					<folderpath>
						<folder>
							<name>Ivanti Patch for Windows Servers (Formerly Shavlik Protect)</name>
							<description/>
							<guid>{09CEDC6A-25E1-4A71-8CB9-6799C984D45C}</guid>
							<folder>
								<name>Patch Scan</name>
								<description/>
								<guid>{E8C9F543-6EE8-4D9B-98CA-9FDBF9E046A7}</guid>
							</folder>
						</folder>
					</folderpath>
					<deleteusedresources>yes</deleteusedresources>
				</properties>
				<tasks>
					<task hidden="yes">
						<limitinvoke>no</limitinvoke>
						<parameters>
							<param>
								<name>Result</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>UID</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description>Patch Scan UID</description>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
						</parameters>
						<conditions>
							<condition guid="{5875D7C0-3539-4978-AE48-5C5B36839C73}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
							<condition guid="{3C8FE80D-55C3-480F-A1C7-F68DEECF7C8C}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
						</conditions>
						<variablescontainer><categories><category><guid>{27518F5C-E766-4839-8168-8EE05FC63130}</guid><name>Ivanti Patch for Windows Servers</name></category></categories><variables><variable><guid>{AEE51540-6638-4A65-9F9F-2CC785375AD2}</guid><name>Ivanti Powershell Admin Credentials</name><description/><type>2</type><parentguid>{27518F5C-E766-4839-8168-8EE05FC63130}</parentguid><details><value1>demo\administrator</value1><value2></value2></details></variable></variables></variablescontainer>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{5875D7C0-3539-4978-AE48-5C5B36839C73}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Patch Scan - Wait</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username>^[Ivanti Powershell Admin Credentials]</username>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># Set variables
$uid ="$[UID]"

# Import API module
Import-Module STProtect -force

# create breakline to filter results
# needed because import-module STProtect ALWAYS gives output whatever I try to ignore the text
# Please fix this Shavlik
write-host "&lt;break&gt;"

#check if module is loaded else error out
if (Get-Module -ListAvailable -Name STProtect) {

    # Module STProtect is loaded and available to use
    # Do action!

    $watchpatchscan = Watch-PatchScan -uid $uid

    # Return info, output for ROID
    # Seperate columns by ;
    # Seperate rows by |
    # ScanName;Elapsed Time;Expected Machines;Completed Machines;Is Complete
    
    # Count returns and reset result
    $max = $waitscan.count-1
    $result = ""

    for ($count=0; $count -le $max; $count++) {
        if ($count -eq 0) {
            $ElapsedTime = "{0:D2}" -f $waitscan[$count].Elapsed.Hours +":"+ "{0:D2}" -f $waitscan[$count].Elapsed.Minutes +":"+ "{0:D2}" -f $waitscan[$count].Elapsed.Seconds 
            $result = $waitscan[$count].Name +";"+ $ElapsedTime +";"+ $waitscan[$count].ExpectedMachines +";"+ $waitscan[$count].CompletedMachines +";"+ $waitscan[0].IsComplete
        }
        else {
            $ElapsedTime = "{0:D2}" -f $waitscan[$count].Elapsed.Hours +":"+ "{0:D2}" -f $waitscan[$count].Elapsed.Minutes +":"+ "{0:D2}" -f $waitscan[$count].Elapsed.Seconds 
            $result = $result +"|"+ $waitscan[$count].Name +";"+ $ElapsedTime +";"+ $waitscan[$count].ExpectedMachines +";"+ $waitscan[$count].CompletedMachines +";"+ $waitscan[0].IsComplete
        }
    }
}
# module not loaded
 else {
    Write-Host "Module does not exist"
}</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>30</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[Result]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{3C8FE80D-55C3-480F-A1C7-F68DEECF7C8C}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Filter output to something usable by deleting the import-module debug info</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username/>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># split string so import-module information is filtered out
# this is done by filtering everything before &lt;split&gt; within the string

$input = "$[Result]"
$input -split "&lt;break&gt;" | select -Last 1</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[Result]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
				</tasks>
			</module>
			<module>
				<properties>
					<guid>{B8A3AC33-1AFB-4CF3-91C6-B76737888198}</guid>
					<name>Patch Scan - Watch / Result</name>
					<enabled>yes</enabled>
					<description/>
					<version>1.0.2</version>
					<versioncomment>Updated version</versioncomment>
					<properties>
						<separators/>
					</properties>
					<folderpath>
						<folder>
							<name>Ivanti Patch for Windows Servers (Formerly Shavlik Protect)</name>
							<description/>
							<guid>{09CEDC6A-25E1-4A71-8CB9-6799C984D45C}</guid>
							<folder>
								<name>Patch Scan</name>
								<description/>
								<guid>{E8C9F543-6EE8-4D9B-98CA-9FDBF9E046A7}</guid>
							</folder>
						</folder>
					</folderpath>
					<deleteusedresources>yes</deleteusedresources>
				</properties>
				<tasks>
					<task hidden="yes">
						<limitinvoke>no</limitinvoke>
						<parameters>
							<param>
								<name>Result</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>UID</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description>Patch Scan UID</description>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
						</parameters>
						<conditions>
							<condition guid="{4005BE4F-CAF2-4175-BB32-22798D97BFFE}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
							<condition guid="{63404EF5-6F5C-4120-8C02-B45D764E9A2A}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
						</conditions>
						<variablescontainer><categories><category><guid>{27518F5C-E766-4839-8168-8EE05FC63130}</guid><name>Ivanti Patch for Windows Servers</name></category></categories><variables><variable><guid>{AEE51540-6638-4A65-9F9F-2CC785375AD2}</guid><name>Ivanti Powershell Admin Credentials</name><description/><type>2</type><parentguid>{27518F5C-E766-4839-8168-8EE05FC63130}</parentguid><details><value1>demo\administrator</value1><value2></value2></details></variable></variables></variablescontainer>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{4005BE4F-CAF2-4175-BB32-22798D97BFFE}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Patch Scan - Watch</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username>^[Ivanti Powershell Admin Credentials]</username>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># Set variables
$uid ="$[UID]"

# Import API module
Import-Module STProtect -force

# create breakline to filter results
# needed because import-module STProtect ALWAYS gives output whatever I try to ignore the text
# Please fix this Shavlik
write-host "&lt;break&gt;"

#check if module is loaded else error out
if (Get-Module -ListAvailable -Name STProtect) {

    # Module STProtect is loaded and available to use
    # Do action!

    $watchscan = Watch-PatchScan -uid $uid

    # Return info, output for ROID
    # Seperate columns by ;
    # Seperate rows by |
    # endpoint;domain;Installed Patches;Missing Patches;Missing SP;Completed on;error number;error discription
    
    # Count returns and reset result
    $max = $watchscan.count-1
    $result = ""

    for ($count=0; $count -le $max; $count++) {
        if ($count -eq 0) {
            $result = $watchscan[$count].Name +";"+ $watchscan[$count].Domain +";"+ $watchscan[$count].InstalledPatches +";"+ $watchscan[$count].MissingPatches +";"+ $watchscan[$count].MissingServicePacks +";"+ $watchscan[$count].CompletedOn +";"+ $watchscan[$count].ErrorNumber +";"+ $watchscan[$count].ErrorDescription
        }
        else {
            $result = $result +"|"+ $watchscan[$count].Name +";"+ $watchscan[$count].Domain +";"+ $watchscan[$count].InstalledPatches +";"+ $watchscan[$count].MissingPatches +";"+ $watchscan[$count].MissingServicePacks +";"+ $watchscan[$count].CompletedOn +";"+ $watchscan[$count].ErrorNumber +";"+ $watchscan[$count].ErrorDescription
        }
    }
}
# module not loaded
 else {
    Write-Host "Module does not exist"
}

</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[Result]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{63404EF5-6F5C-4120-8C02-B45D764E9A2A}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Filter output to something usable by deleting the import-module debug info</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username/>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># split string so import-module information is filtered out
# this is done by filtering everything before &lt;split&gt; within the string

$input = "$[Result]"
$input -split "&lt;break&gt;" | select -Last 1</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[Result]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
				</tasks>
			</module>
			<module>
				<properties>
					<guid>{1BE1CFDB-B665-478E-A842-5D78CDFA3D13}</guid>
					<name>Scan and Deploy -  Endpoint</name>
					<enabled>yes</enabled>
					<description/>
					<version>1.0.2</version>
					<versioncomment>Updated version</versioncomment>
					<properties>
						<separators/>
					</properties>
					<folderpath>
						<folder>
							<name>Ivanti Patch for Windows Servers (Formerly Shavlik Protect)</name>
							<description/>
							<guid>{09CEDC6A-25E1-4A71-8CB9-6799C984D45C}</guid>
							<folder>
								<name>Scan and Deploy</name>
								<description/>
								<guid>{43F52495-7897-40B2-A59D-6F94715689D5}</guid>
							</folder>
						</folder>
					</folderpath>
					<deleteusedresources>yes</deleteusedresources>
				</properties>
				<tasks>
					<task hidden="yes">
						<limitinvoke>no</limitinvoke>
						<parameters>
							<param>
								<name>Result</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>Endpoint Name</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="yes" eraseprev="no">yes</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>Credential Friendly Name</name>
								<value1>^[Ivanti Patch Credentials]</value1>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="yes" eraseprev="no">yes</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
						</parameters>
						<conditions>
							<condition guid="{0A4BEB92-93F5-40CB-9A51-A02C2F6E1975}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
							<condition guid="{FCD47989-F135-495B-BCF3-039276F0D892}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
						</conditions>
						<variablescontainer><categories><category><guid>{27518F5C-E766-4839-8168-8EE05FC63130}</guid><name>Ivanti Patch for Windows Servers</name></category></categories><variables><variable><guid>{7DAFD76A-AA65-4A92-959E-78BA9D7E7432}</guid><name>Ivanti Patch Credentials</name><description/><type>0</type><parentguid>{27518F5C-E766-4839-8168-8EE05FC63130}</parentguid><details><value1>administrator</value1></details></variable><variable><guid>{AEE51540-6638-4A65-9F9F-2CC785375AD2}</guid><name>Ivanti Powershell Admin Credentials</name><description/><type>2</type><parentguid>{27518F5C-E766-4839-8168-8EE05FC63130}</parentguid><details><value1>demo\administrator</value1><value2></value2></details></variable></variables></variablescontainer>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{0A4BEB92-93F5-40CB-9A51-A02C2F6E1975}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Scan and Deploy - Endpoint</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username>^[Ivanti Powershell Admin Credentials]</username>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># Set variables
$Endpointname ="$[Endpoint Name]"
$credentialFriendlyName = "$[Credential Friendly Name]"

# Import API module
Import-Module STProtect -force

# create breakline to filter results
# needed because import-module STProtect ALWAYS gives output whatever I try to ignore the text
# Please fix this Shavlik
write-host "&lt;break&gt;"

#check if module is loaded else error out
if (Get-Module -ListAvailable -Name STProtect) {

    # Module STProtect is loaded and available to use
    # Do action!

    $patchscan = Start-PatchScan -CredentialFriendlyName $credentialFriendlyName -EndpointNames $Endpointname | Wait-PatchScan
    $patchdeploy = Start-PatchDeploy –ScanUid ($patchscan.Uid)
    $temp = Wait-PatchDeploy -Uid $patchdeploy.uid.Guid
    $patchdeployGUID = $patchdeploy.uid.Guid
    $patchdeploy = watch-PatchDeploy -uid $patchdeployguid

    # Return info, output for ROID
    # Seperate columns by ;
    # Seperate rows by |
    # patch-guid;endpoint;domain;IP Address;Completed Patches;Overall State;Last Updated;errorcode;statusdescription
    
    # Count returns and reset result
    $max = $patchdeploy.count-1
    $result = ""

    for ($count=0; $count -le $max; $count++) {
        if ($count -eq 0) {
            $result = $patchdeployGUID +";"+ $patchdeploy[$count].Name +";"+ $patchdeploy[$count].Domain +";"+ $patchdeploy[$count].Address +";"+$patchdeploy[$count].CompletedPatches +";"+  $patchdeploy[$count].OverallState +";"+ $patchdeploy[$count].LastUpdated +";"+ $patchdeploy[$count].Errorcode +";"+ $patchdeploy[$count].StatusDescription
        }
        else {
            $result = $result +"|"+ $patchdeployGUID +";"+ $patchdeploy[$count].Name +";"+ $patchdeploy[$count].Domain +";"+ $patchdeploy[$count].Address +";"+$patchdeploy[$count].CompletedPatches +";"+  $patchdeploy[$count].OverallState +";"+ $patchdeploy[$count].LastUpdated +";"+ $patchdeploy[$count].Errorcode +";"+ $patchdeploy[$count].StatusDescription
        }
    }

    #show result
    $result
}
# module not loaded
 else {
    Write-Host "Module does not exist"
}</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[Result]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{FCD47989-F135-495B-BCF3-039276F0D892}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Filter output to something usable by deleting the import-module debug info</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username/>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># split string so import-module information is filtered out
# this is done by filtering everything before &lt;split&gt; within the string

$input = "$[Result]"
$input -split "&lt;break&gt;" | select -Last 1</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[Result]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
				</tasks>
			</module>
			<module>
				<properties>
					<guid>{F7828A9E-E211-4088-8054-6C3A6B655EC8}</guid>
					<name>Scan and Deploy - MachineGroup</name>
					<enabled>yes</enabled>
					<description/>
					<version>1.0.1</version>
					<versioncomment>Updated version</versioncomment>
					<properties>
						<separators/>
					</properties>
					<folderpath>
						<folder>
							<name>Ivanti Patch for Windows Servers (Formerly Shavlik Protect)</name>
							<description/>
							<guid>{09CEDC6A-25E1-4A71-8CB9-6799C984D45C}</guid>
							<folder>
								<name>Scan and Deploy</name>
								<description/>
								<guid>{43F52495-7897-40B2-A59D-6F94715689D5}</guid>
							</folder>
						</folder>
					</folderpath>
					<deleteusedresources>yes</deleteusedresources>
				</properties>
				<tasks>
					<task hidden="yes">
						<limitinvoke>no</limitinvoke>
						<parameters>
							<param>
								<name>Result</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>Credential Friendly Name</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="yes" eraseprev="no">yes</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>Machine Group Name</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="yes" eraseprev="no">yes</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
						</parameters>
						<conditions>
							<condition guid="{A54F5571-7A60-4906-BDF9-227DA9FB20B6}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
							<condition guid="{74EDF9DE-8A70-41BD-B684-584331F4EE7B}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
						</conditions>
						<variablescontainer><categories><category><guid>{27518F5C-E766-4839-8168-8EE05FC63130}</guid><name>Ivanti Patch for Windows Servers</name></category></categories><variables><variable><guid>{AEE51540-6638-4A65-9F9F-2CC785375AD2}</guid><name>Ivanti Powershell Admin Credentials</name><description/><type>2</type><parentguid>{27518F5C-E766-4839-8168-8EE05FC63130}</parentguid><details><value1>demo\administrator</value1><value2></value2></details></variable></variables></variablescontainer>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{A54F5571-7A60-4906-BDF9-227DA9FB20B6}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Scan and Deploy - MachineGroup</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username>^[Ivanti Powershell Admin Credentials]</username>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># Set variables
$MGroupName = "$[Machine Group Name]"
$credentialFriendlyName = "$[Credential Friendly Name]"

# Import API module
Import-Module STProtect -force

# create breakline to filter results
# needed because import-module STProtect ALWAYS gives output whatever I try to ignore the text
# Please fix this Shavlik
write-host "&lt;break&gt;"

#check if module is loaded else error out
if (Get-Module -ListAvailable -Name STProtect) {

    # Module STProtect is loaded and available to use
    # Do action!

    $patchscan = Start-PatchScan -CredentialFriendlyName $credentialFriendlyName -MachineGroups $MGroupName | Wait-PatchScan
    $patchdeploy = Start-PatchDeploy –ScanUid ($patchscan.Uid)
    $temp = Wait-PatchDeploy -Uid $patchdeploy.uid.Guid
    $patchdeployGUID = $patchdeploy.uid.Guid
    $patchdeploy = watch-PatchDeploy -uid $patchdeployGuid

    # Return info, output for ROID
    # Seperate columns by ;
    # Seperate rows by |
    # patch-guid;endpoint;domain;IP Address;Completed Patches;Overall State;Last Updated;errorcode;statusdescription
    
    # Count returns and reset result
    $max = $patchdeploy.count-1
    $result = ""

    for ($count=0; $count -le $max; $count++) {
        if ($count -eq 0) {
            $result = $patchdeployGUID +";"+ $patchdeploy[$count].Name +";"+ $patchdeploy[$count].Domain +";"+ $patchdeploy[$count].Address +";"+$patchdeploy[$count].CompletedPatches +";"+  $patchdeploy[$count].OverallState +";"+ $patchdeploy[$count].LastUpdated +";"+ $patchdeploy[$count].Errorcode +";"+ $patchdeploy[$count].StatusDescription
        }
        else {
            $result = $result +"|"+ $patchdeployGUID +";"+ $patchdeploy[$count].Name +";"+ $patchdeploy[$count].Domain +";"+ $patchdeploy[$count].Address +";"+$patchdeploy[$count].CompletedPatches +";"+  $patchdeploy[$count].OverallState +";"+ $patchdeploy[$count].LastUpdated +";"+ $patchdeploy[$count].Errorcode +";"+ $patchdeploy[$count].StatusDescription
        }
    }

    # Show Result
    $result
}
# module not loaded
 else {
    Write-Host "Module does not exist"
}

</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[Result]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{74EDF9DE-8A70-41BD-B684-584331F4EE7B}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Filter output to something usable by deleting the import-module debug info</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username/>
							<password encrypted="yes"/>
							<usescript>yes</usescript>
							<source># split string so import-module information is filtered out
# this is done by filtering everything before &lt;split&gt; within the string

$input = "$[Result]"
$input -split "&lt;break&gt;" | select -Last 1</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<setoutparameter parse="no">$[Result]</setoutparameter>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
				</tasks>
			</module>
		</modules>
		<resources/>
		<runbooks>
			<runbook>
				<properties>
					<guid>{0FDAF02D-DFD9-44E6-8DAF-EA232CB892F7}</guid>
					<name>Scan and Deploy - Endpoint</name>
					<enabled>yes</enabled>
					<description/>
					<version>1.0.4</version>
					<versioncomment>Updated version</versioncomment>
					<properties>
						<parameters>
							<param>
								<name>DeployUID</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection>
									<module type="module" guid="{DEE5AE46-9642-4AD2-8C8C-E2258B30F6A8}" linktype="2">
										<param>DeployUID</param>
									</module>
									<module type="module" guid="{CB29009C-E694-4131-9AD9-B92FEF22992D}" linktype="0">
										<param>DeployUID</param>
									</module>
									<module type="module" guid="{2419086E-0E2F-4355-9E6B-8BB14422CF49}" linktype="0">
										<param>DeployUID</param>
									</module>
									<module type="module" guid="{1D6991EF-DB6D-408A-BC0C-B8A9517D121C}" linktype="0">
										<param>DeployUID</param>
									</module>
								</selection>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>Result</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection>
									<module type="module" guid="{1D6991EF-DB6D-408A-BC0C-B8A9517D121C}" linktype="2">
										<param>Result</param>
									</module>
								</selection>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param ref="module" guid="{4373E5F4-D4F4-4FEC-B592-360E91207409}" name="Patch Deploy - Download" linked="no">
								<name>UID</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description>Patch Scan UID</description>
								<hint>Please provide the necessary input</hint>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="no" eraseprev="no">no</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
								<selection>
									<module guid="{DEE5AE46-9642-4AD2-8C8C-E2258B30F6A8}" type="module">
										<param>UID</param>
									</module>
									<module guid="{B9C907C8-2EBD-4F40-8674-A8466B0A32EE}" type="module" linktype="2">
										<param>UID</param>
									</module>
									<module guid="{0D8BA277-4F3A-4031-8DDA-2DB9BB28630B}" type="module">
										<param>UID</param>
									</module>
								</selection>
							</param>
							<param>
								<name>Credential Friendly Name</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection>
									<module type="module" guid="{B9C907C8-2EBD-4F40-8674-A8466B0A32EE}" linktype="0">
										<param>Credential Friendly Name</param>
									</module>
								</selection>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="yes" eraseprev="no">yes</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>Endpoint Name</name>
								<value1/>
								<value2/>
								<value3/>
								<type>0</type>
								<description/>
								<hint>Please provide the necessary input</hint>
								<selection>
									<module type="module" guid="{B9C907C8-2EBD-4F40-8674-A8466B0A32EE}" linktype="0">
										<param>Endpoint Name</param>
									</module>
								</selection>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="yes" eraseprev="no">yes</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
						</parameters>
						<jobs>
							<job>
								<guid>{18E302B7-E554-404E-B40D-5E67F1520371}</guid>
								<properties>
									<enabled>yes</enabled>
									<name>Patch Scan - Start Endpoint</name>
									<timeout>0</timeout>
									<offlineagentsnextboot>no</offlineagentsnextboot>
									<wol>no</wol>
									<selectoneagent>yes</selectoneagent>
									<what type="module">{B9C907C8-2EBD-4F40-8674-A8466B0A32EE}</what>
									<whatname>Patch Scan - Start Endpoint</whatname>
									<who type="team">{A9DBFDF7-AA9A-4EBB-8EE0-D477DF81FEB5}</who>
									<use_runbookparam>no</use_runbookparam>
									<whoname>Ivanti Patch for Windows Console</whoname>
									<onerror>fail</onerror>
								</properties>
							</job>
							<job>
								<guid>{6C237C81-2774-4FC9-8278-54E6F75FD699}</guid>
								<properties>
									<enabled>yes</enabled>
									<name>Patch Scan - Wait</name>
									<timeout>0</timeout>
									<offlineagentsnextboot>no</offlineagentsnextboot>
									<wol>no</wol>
									<selectoneagent>yes</selectoneagent>
									<what type="module">{0D8BA277-4F3A-4031-8DDA-2DB9BB28630B}</what>
									<whatname>Patch Scan - Wait</whatname>
									<who type="team">{A9DBFDF7-AA9A-4EBB-8EE0-D477DF81FEB5}</who>
									<use_runbookparam>no</use_runbookparam>
									<whoname>Ivanti Patch for Windows Console</whoname>
									<onerror>fail</onerror>
								</properties>
							</job>
							<job>
								<guid>{3E3DE264-F78B-41AD-AE5D-53F05D23FE01}</guid>
								<properties>
									<enabled>yes</enabled>
									<name>Patch Deploy - Start (no wait)</name>
									<timeout>0</timeout>
									<offlineagentsnextboot>no</offlineagentsnextboot>
									<wol>no</wol>
									<selectoneagent>yes</selectoneagent>
									<what type="module">{DEE5AE46-9642-4AD2-8C8C-E2258B30F6A8}</what>
									<whatname>Patch Deploy - Start (no wait)</whatname>
									<who type="team">{A9DBFDF7-AA9A-4EBB-8EE0-D477DF81FEB5}</who>
									<use_runbookparam>no</use_runbookparam>
									<whoname>Ivanti Patch for Windows Console</whoname>
									<onerror>fail</onerror>
								</properties>
							</job>
							<job>
								<guid>{2273A0EC-363E-4E46-8481-791B9ED2C177}</guid>
								<properties>
									<enabled>yes</enabled>
									<name>Patch Deploy - Wait</name>
									<timeout>0</timeout>
									<offlineagentsnextboot>no</offlineagentsnextboot>
									<wol>no</wol>
									<selectoneagent>yes</selectoneagent>
									<what type="module">{CB29009C-E694-4131-9AD9-B92FEF22992D}</what>
									<whatname>Patch Deploy - Wait</whatname>
									<who type="team">{A9DBFDF7-AA9A-4EBB-8EE0-D477DF81FEB5}</who>
									<use_runbookparam>no</use_runbookparam>
									<whoname>Ivanti Patch for Windows Console</whoname>
									<onerror>fail</onerror>
								</properties>
							</job>
							<job>
								<guid>{7AE7B394-3DA0-4F45-A52C-1B3CE7532820}</guid>
								<properties>
									<enabled>yes</enabled>
									<name>Patch Deploy - Watch / Results</name>
									<timeout>0</timeout>
									<offlineagentsnextboot>no</offlineagentsnextboot>
									<wol>no</wol>
									<selectoneagent>yes</selectoneagent>
									<what type="module">{2419086E-0E2F-4355-9E6B-8BB14422CF49}</what>
									<whatname>Patch Deploy - Watch / Results</whatname>
									<who type="team">{A9DBFDF7-AA9A-4EBB-8EE0-D477DF81FEB5}</who>
									<use_runbookparam>no</use_runbookparam>
									<whoname>Ivanti Patch for Windows Console</whoname>
									<onerror>fail</onerror>
								</properties>
							</job>
							<job>
								<guid>{FB210F2A-D192-4EE3-958E-1222CFC80AFB}</guid>
								<properties>
									<enabled>yes</enabled>
									<name>Patch Deploy - Deployed patches report</name>
									<timeout>0</timeout>
									<offlineagentsnextboot>no</offlineagentsnextboot>
									<wol>no</wol>
									<selectoneagent>yes</selectoneagent>
									<what type="module">{1D6991EF-DB6D-408A-BC0C-B8A9517D121C}</what>
									<whatname>Patch Deploy - Deployed patches report</whatname>
									<who type="team">{A9DBFDF7-AA9A-4EBB-8EE0-D477DF81FEB5}</who>
									<use_runbookparam>no</use_runbookparam>
									<whoname>Ivanti Patch for Windows Console</whoname>
									<onerror>fail</onerror>
								</properties>
							</job>
						</jobs>
						<separators/>
						<limitinvoke>no</limitinvoke>
					</properties>
					<folderpath>
						<folder>
							<name>Ivanti Patch for Windows Servers (Formerly Shavlik Protect)</name>
							<description/>
							<guid>{523E9E81-0624-4828-8F20-02BFC63C1697}</guid>
						</folder>
					</folderpath>
				</properties>
			</runbook>
		</runbooks>
		<teams/>
		<projectfolders/>
		<modulefolders>
			<folder>
				<guid>{09CEDC6A-25E1-4A71-8CB9-6799C984D45C}</guid>
				<name>Ivanti Patch for Windows Servers (Formerly Shavlik Protect)</name>
				<description/>
				<parent/>
			</folder>
			<folder>
				<guid>{99524F25-FE43-4EF7-BE81-81D261009667}</guid>
				<name>MachineGroups</name>
				<description/>
				<parent>{09CEDC6A-25E1-4A71-8CB9-6799C984D45C}</parent>
			</folder>
			<folder>
				<guid>{5653FB79-B658-47A2-B982-E11156CB9DA8}</guid>
				<name>Endpoint</name>
				<description/>
				<parent>{99524F25-FE43-4EF7-BE81-81D261009667}</parent>
			</folder>
			<folder>
				<guid>{D8DCDEE7-4761-4680-B751-95CE5F4C8CDB}</guid>
				<name>Patch Deploy</name>
				<description/>
				<parent>{09CEDC6A-25E1-4A71-8CB9-6799C984D45C}</parent>
			</folder>
			<folder>
				<guid>{E8C9F543-6EE8-4D9B-98CA-9FDBF9E046A7}</guid>
				<name>Patch Scan</name>
				<description/>
				<parent>{09CEDC6A-25E1-4A71-8CB9-6799C984D45C}</parent>
			</folder>
			<folder>
				<guid>{43F52495-7897-40B2-A59D-6F94715689D5}</guid>
				<name>Scan and Deploy</name>
				<description/>
				<parent>{09CEDC6A-25E1-4A71-8CB9-6799C984D45C}</parent>
			</folder>
		</modulefolders>
		<resourcefolders/>
		<runbookfolders>
			<folder>
				<guid>{523E9E81-0624-4828-8F20-02BFC63C1697}</guid>
				<name>Ivanti Patch for Windows Servers (Formerly Shavlik Protect)</name>
				<description/>
				<parent/>
			</folder>
		</runbookfolders>
		<teamfolders/>
	</buildingblock>
</AutomationManager>
